@using frontend.Clients
@inject IApiAppClient ApiApp

<div class="container mt-4">
    <div class="mb-3">
        <label for="youtube-link" class="form-label">YouTube Link URL</label>
        <input type="text" class="form-control" id="youtube-link" @bind="youTubeLink" />
    </div>
    <div class="mb-3">
        <label for="video-language-code" class="form-label">Video Language</label>
        <select class="form-select" id="video-language-code" @bind="videoLanguageCode">
            <option value="en">English</option>
            <option value="ko">Korean</option>
        </select>
    </div>
    <div class="mb-3">
        <label for="summary-language-code" class="form-label">Summary Language</label>
        <select class="form-select" id="summary-language-code" @bind="summaryLanguageCode">
            <option value="en">English</option>
            <option value="ko">Korean</option>
        </select>
    </div>
    <div class="mb-3">
        <button class="btn btn-primary me-2" @onclick="SummariseAsync">Summary</button>
        <button class="btn btn-secondary" @onclick="ClearAsync">Clear</button>
    </div>
    <div class="mb-3">
        <label for="result" class="form-label">Summary Result</label>
        <textarea class="form-control" id="result" rows="5" readonly>@summaryResult</textarea>
    </div>
</div>

@code {
    private string youTubeLink = string.Empty;
    private string videoLanguageCode = "en";
    private string summaryLanguageCode = "en";
    private string summaryResult = string.Empty;

    private async Task SummariseAsync()
    {
        try
        {
            var result = await ApiApp.SummariseAsync(youTubeLink, videoLanguageCode, summaryLanguageCode);
            summaryResult = result;
        }
        catch (Exception ex)
        {
            summaryResult = ex.Message;
            Console.WriteLine(summaryResult);
        }
    }

    private async Task ClearAsync()
    {
        youTubeLink = string.Empty;
        videoLanguageCode = "en";
        summaryLanguageCode = "en";
        summaryResult = string.Empty;

        await Task.CompletedTask;
    }
}